# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/infobip-kafka-service',
                'doc_host': 'https://airtai.github.io',
                'git_url': 'https://github.com/airtai/infobip-kafka-service',
                'lib_path': 'infobip_kafka_service'},
  'syms': { 'infobip_kafka_service.downloading': { 'infobip_kafka_service.downloading.get_clickhouse_params_from_env_vars': ( 'downloading.html#get_clickhouse_params_from_env_vars',
                                                                                                                              'infobip_kafka_service/downloading.py')},
            'infobip_kafka_service.helpers': { 'infobip_kafka_service.helpers.ModelTrainingRequest': ( 'helpers.html#modeltrainingrequest',
                                                                                                       'infobip_kafka_service/helpers.py'),
                                               'infobip_kafka_service.helpers.StartPrediction': ( 'helpers.html#startprediction',
                                                                                                  'infobip_kafka_service/helpers.py'),
                                               'infobip_kafka_service.helpers.TaskType': ( 'helpers.html#tasktype',
                                                                                           'infobip_kafka_service/helpers.py'),
                                               'infobip_kafka_service.helpers.get_aio_kafka_config': ( 'helpers.html#get_aio_kafka_config',
                                                                                                       'infobip_kafka_service/helpers.py')},
            'infobip_kafka_service.logger': { 'infobip_kafka_service.logger.get_default_logger_configuration': ( 'logger.html#get_default_logger_configuration',
                                                                                                                 'infobip_kafka_service/logger.py'),
                                              'infobip_kafka_service.logger.get_logger': ( 'logger.html#get_logger',
                                                                                           'infobip_kafka_service/logger.py'),
                                              'infobip_kafka_service.logger.set_level': ( 'logger.html#set_level',
                                                                                          'infobip_kafka_service/logger.py'),
                                              'infobip_kafka_service.logger.supress_timestamps': ( 'logger.html#supress_timestamps',
                                                                                                   'infobip_kafka_service/logger.py')},
            'infobip_kafka_service.scheduler': { 'infobip_kafka_service.scheduler.main': ( 'scheduler.html#main',
                                                                                           'infobip_kafka_service/scheduler.py'),
                                                 'infobip_kafka_service.scheduler.start_daily_prediction': ( 'scheduler.html#start_daily_prediction',
                                                                                                             'infobip_kafka_service/scheduler.py'),
                                                 'infobip_kafka_service.scheduler.start_weekly_training': ( 'scheduler.html#start_weekly_training',
                                                                                                            'infobip_kafka_service/scheduler.py')},
            'infobip_kafka_service.training': {}}}
